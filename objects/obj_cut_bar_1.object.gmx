<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_cutscene</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///start right away
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///state machine
switch(state) {
    case 0: {
        with obj_soldier
            instance_destroy();
        scr_start_cutscene();
        with instance_create(2632, 1581, obj_brother) {
            image_xscale = -1;
            stance       = CUTSCENE;
            cutscene     = true;
            scr_current_anim("drink");
            skeleton_animation_set("drink");
            skeleton_attachment_set("mainhand", "none");
            skeleton_attachment_set("offhand", "char_peasant/mug");
            skeleton_attachment_set("backpack", "char_0/sword");
        }
        with (obj_player) {
            scr_current_anim("sitting");
        }
        state = 1;
        scr_wait_seconds(4);
    }
    break;
    case 1:
    obj_player.x = 2114;
    var next_state = 2;
    scr_wait(next_state);
    break;
    case 2: {
        with obj_brother
            scr_current_anim("sitting");
        var t = obj_player.id;
        scr_create_box(t, scr_dg_bar_6, t.x, t.y - 400, 27, t.y - 240);
        obj_camera.target = t;
        state = 3;
    }
    break;
    case 3: {
        var next_state = 4;
        scr_wait(next_state);
    }
    break;
    case 4: {
        var t = obj_brother.id;
        scr_create_box(t, scr_dg_bar_7, t.x, t.y - 400, 27, t.y - 240);
        obj_camera.target = t;
        state = 5;
    }
    case 5:
    var next_state = 6;
    scr_wait(next_state);
    break;
    case 6:
    with obj_player {
        scr_current_anim("drink");
        obj_camera.target = id;
    }
    scr_wait_seconds(4.2);
    state = 7;
    break;
    case 7:
    var next_state = 8;
    scr_wait(next_state);
    break;
    case 8: {
        with obj_player
            scr_current_anim("sitting");
        var t = obj_player.id;
        scr_create_box(t, scr_dg_bar_8, t.x, t.y - 400, 27, t.y - 240);
        obj_camera.target = t;
        state = 9;
    }
    break;
    case 9:
    var next_state = 10;
    scr_wait(next_state);
    break;
    case 10:
    {
        var t = obj_brother.id;
        scr_create_box(t, scr_dg_bar_9, t.x, t.y - 400, 27, t.y - 290);
        obj_camera.target = t;
        state = 11;
    }
    break;
    case 11:
    var next_state = 12;
    scr_wait(next_state);
    break;
    case 12:
    with instance_create(1020, 1561, obj_peasant) {
        depth        = 950;
        stance       = CUTSCENE;
        cutscene     = true;
        obj_camera.target = id;
    }
    state = 13;
    break;
    case 13: {
        var t = false;
        with obj_peasant {
            h_speed = runspeed;
            scr_current_anim(run_anim);
            if x &gt; 1810
                t = true;
            if t {
                scr_current_anim(stand_anim);
            }
        }
        if t {
            state = 14;
        }
    }
    break;
    case 14: {
        scr_stop_music();
        obj_room_controller.level_music = scr_play_music(snd_bar_1)
        with obj_peasant {
            hhealth = 1;
            scr_current_anim("help");
            talking = true;
        }
        var t = obj_peasant.id;
        scr_create_box(t, scr_dg_bar_10, t.x, t.y - 400, 27, t.y - 240);
        obj_camera.target = t;
        state = 15;
    }
    break;
    case 15:
    var next_state = 16;
    scr_wait(next_state);
    break;
    case 16:
    with instance_create(1020, 1561, obj_soldier) {
        scr_costume_rebel_0();
        hhealth = 1;
        depth        = 900;
        stance       = CUTSCENE;
        cutscene     = true;
        obj_camera.target = id;
    }
    state = 17;
    break;
    case 17:
    var t = false;
    with obj_soldier {
        h_speed = runspeed;
        scr_current_anim(run_anim);
        if x &gt; 1610
            t = true;
        if t {
            scr_current_anim(stand_anim);
        }
    }
    if t {
        state = 18;
        with obj_soldier {
            if current_anim != current_attack_anim {
                var ind             =  0;
                scr_current_anim(mainhand.attack_anim[ind]);
                current_attack_anim = current_anim;
                timeline_index      = mainhand.attack_guide[ind];
            }
            if !timeline_running {
                timeline_position = 0;
                timeline_running  = true;
            }
        }
    }
    break;
    case 18:
    with obj_soldier
        talking = true;
    state = 19;
    break;
    case 19:
    var q =instance_exists(obj_bleed);
    if (q) {
        var t = obj_player;
        obj_camera.target = t;
        with t {
            image_xscale = -1;
            y -= 15;
            skeleton_attachment_set("offhand", "none");
            skeleton_attachment_set("backpack", "none");
            skeleton_attachment_set("mainhand", "char black/broadsword");
            scr_current_anim(stand_anim);
            wound = false;
        }
        instance_create(t.x + 145, t.y - 28, obj_mug);
        var t = obj_brother;
        with t {
            y -= 15;
            skeleton_attachment_set("offhand", "none");
            skeleton_attachment_set("backpack", "none");
            skeleton_attachment_set("mainhand", "char_0/sword");
            scr_current_anim(stand_anim);
        }
        scr_cutscene_run(obj_brother.id, obj_soldier.x);
        state = 20;
    }
    break;
    case 20:
    obj_soldier.x -= 50;
    with obj_player {
        x += 30;
        scr_current_anim(mainhand.kick_anim);
        if current_anim != current_attack_anim {
            var anim_           = mainhand.kick_anim;
            scr_current_anim(anim_);
            current_attack_anim = current_anim;
            timeline_index      = mainhand.kick_guide;
        }
        scr_start_timeline();
        talking = true;
    }
    state = 21;
    break;
    case 21:
    var next = 22;
    scr_wait(22);
    break;
    case 22:
    state = 23;
    with obj_brother {
        obj_camera.target = id;
        if current_anim != current_attack_anim {
            var ind             =  0;
            scr_current_anim(mainhand.attack_anim[ind]);
            current_attack_anim = current_anim;
            timeline_index      = mainhand.attack_guide[ind];
        }
        if !timeline_running {
            timeline_position = 0;
            timeline_running  = true;
        }
    }
    break;
    case 23:
    with obj_brother
        talking = true;
    state = 24;
    break;
    case 24:
    scr_wait_seconds(2);
    state = 25;
    break;
    case 25:
    var next = 26;
    scr_wait(next);
    break;
    case 26:
    with obj_fpeasant {
        image_xscale = -1;
        scr_current_anim("help");
        talking = true;
        var t = id;
        scr_create_box(t, scr_dg_bar_11, t.x, t.y - 400, 27, t.y - 240);
        obj_camera.target = t;
        
    }
    state = 27;
    waiting = true;
    break;
    case 27:
    var next_state = 28;
    scr_wait(next_state);
    break;
    case 28:
    {   
        obj_brother.image_xscale = 1;
        var t = obj_player.id;
        with t {
            scr_talk_gesture();
        }
        scr_create_box(t, scr_dg_bar_12, t.x, t.y - 400, 27, t.y - 240);
        obj_camera.target = t;
        state = 29;
    }
    break;
    case 29:
    var next_state = 30;
    scr_wait(next_state);
    break;
    case 30:
    {
        var t = obj_brother.id;
        with t {
            scr_talk_gesture();
        }
        scr_create_box(t, scr_dg_bar_13, t.x + 60, t.y - 400, 17, t.y - 240);
        obj_camera.target = t;
        state = 31;
    }
    break;
    case 31:
    var next_state = 32;
    scr_wait(next_state);
    break;
    case 32:
    scr_cutscene_run(obj_player, 300);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
